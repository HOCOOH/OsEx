由于文件 (符号) 而包含了归档成员

lib/orangescrt.a(printf.o)    kernel/main.o (printf)
lib/orangescrt.a(vsprintf.o)  kernel/proc.o (sprintf)
lib/orangescrt.a(string.o)    kernel/start.o (memcpy)
lib/orangescrt.a(misc.o)      kernel/main.o (assertion_failure)
lib/orangescrt.a(open.o)      kernel/main.o (open)
lib/orangescrt.a(read.o)      kernel/main.o (read)
lib/orangescrt.a(write.o)     kernel/main.o (write)
lib/orangescrt.a(close.o)     kernel/main.o (close)
lib/orangescrt.a(getpid.o)    kernel/main.o (getpid)
lib/orangescrt.a(stat.o)      mm/exec.o (stat)
lib/orangescrt.a(fork.o)      kernel/main.o (fork)
lib/orangescrt.a(wait.o)      kernel/main.o (wait)
lib/orangescrt.a(exec.o)      kernel/main.o (execv)
lib/orangescrt.a(syscall.o)   lib/orangescrt.a(misc.o) (sendrec)

舍弃的输入节

 .note.GNU-stack
                0x0000000000000000        0x0 kernel/start.o
 .llvm_addrsig  0x0000000000000000        0x7 kernel/start.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/main.o
 .llvm_addrsig  0x0000000000000000       0x21 kernel/main.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/clock.o
 .llvm_addrsig  0x0000000000000000        0xb kernel/clock.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/keyboard.o
 .llvm_addrsig  0x0000000000000000       0x1a kernel/keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/tty.o
 .llvm_addrsig  0x0000000000000000       0x1c kernel/tty.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/console.o
 .llvm_addrsig  0x0000000000000000       0x11 kernel/console.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/i8259.o
 .llvm_addrsig  0x0000000000000000        0x6 kernel/i8259.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/global.o
 .llvm_addrsig  0x0000000000000000        0xb kernel/global.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/protect.o
 .llvm_addrsig  0x0000000000000000       0x2f kernel/protect.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/proc.o
 .llvm_addrsig  0x0000000000000000       0x17 kernel/proc.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/systask.o
 .llvm_addrsig  0x0000000000000000        0x9 kernel/systask.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/hd.o
 .llvm_addrsig  0x0000000000000000       0x22 kernel/hd.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/klib.o
 .llvm_addrsig  0x0000000000000000        0x5 kernel/klib.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/mfqs_queue.o
 .llvm_addrsig  0x0000000000000000        0x2 kernel/mfqs_queue.o
 .note.GNU-stack
                0x0000000000000000        0x0 lib/syslog.o
 .llvm_addrsig  0x0000000000000000        0x4 lib/syslog.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/main.o
 .llvm_addrsig  0x0000000000000000        0xd mm/main.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/forkexit.o
 .llvm_addrsig  0x0000000000000000        0xa mm/forkexit.o
 .note.GNU-stack
                0x0000000000000000        0x0 mm/exec.o
 .llvm_addrsig  0x0000000000000000        0xd mm/exec.o
 .note.GNU-stack
                0x0000000000000000        0x0 fs/main.o
 .llvm_addrsig  0x0000000000000000       0x20 fs/main.o
 .note.GNU-stack
                0x0000000000000000        0x0 fs/open.o
 .llvm_addrsig  0x0000000000000000       0x19 fs/open.o
 .note.GNU-stack
                0x0000000000000000        0x0 fs/misc.o
 .llvm_addrsig  0x0000000000000000        0xe fs/misc.o
 .note.GNU-stack
                0x0000000000000000        0x0 fs/read_write.o
 .llvm_addrsig  0x0000000000000000        0xd fs/read_write.o
 .note.GNU-stack
                0x0000000000000000        0x0 fs/link.o
 .llvm_addrsig  0x0000000000000000        0xf fs/link.o
 .note.GNU-stack
                0x0000000000000000        0x0 fs/disklog.o
 .llvm_addrsig  0x0000000000000000       0x1a fs/disklog.o
 .note.GNU-stack
                0x0000000000000000        0x0 lib/orangescrt.a(printf.o)
 .llvm_addrsig  0x0000000000000000        0x4 lib/orangescrt.a(printf.o)
 .note.GNU-stack
                0x0000000000000000        0x0 lib/orangescrt.a(vsprintf.o)
 .llvm_addrsig  0x0000000000000000        0x5 lib/orangescrt.a(vsprintf.o)
 .note.GNU-stack
                0x0000000000000000        0x0 lib/orangescrt.a(misc.o)
 .llvm_addrsig  0x0000000000000000        0x5 lib/orangescrt.a(misc.o)
 .note.GNU-stack
                0x0000000000000000        0x0 lib/orangescrt.a(open.o)
 .llvm_addrsig  0x0000000000000000        0x3 lib/orangescrt.a(open.o)
 .note.GNU-stack
                0x0000000000000000        0x0 lib/orangescrt.a(read.o)
 .llvm_addrsig  0x0000000000000000        0x1 lib/orangescrt.a(read.o)
 .note.GNU-stack
                0x0000000000000000        0x0 lib/orangescrt.a(write.o)
 .llvm_addrsig  0x0000000000000000        0x1 lib/orangescrt.a(write.o)
 .note.GNU-stack
                0x0000000000000000        0x0 lib/orangescrt.a(close.o)
 .llvm_addrsig  0x0000000000000000        0x1 lib/orangescrt.a(close.o)
 .note.GNU-stack
                0x0000000000000000        0x0 lib/orangescrt.a(getpid.o)
 .llvm_addrsig  0x0000000000000000        0x2 lib/orangescrt.a(getpid.o)
 .note.GNU-stack
                0x0000000000000000        0x0 lib/orangescrt.a(stat.o)
 .llvm_addrsig  0x0000000000000000        0x3 lib/orangescrt.a(stat.o)
 .note.GNU-stack
                0x0000000000000000        0x0 lib/orangescrt.a(fork.o)
 .llvm_addrsig  0x0000000000000000        0x2 lib/orangescrt.a(fork.o)
 .note.GNU-stack
                0x0000000000000000        0x0 lib/orangescrt.a(wait.o)
 .llvm_addrsig  0x0000000000000000        0x1 lib/orangescrt.a(wait.o)
 .note.GNU-stack
                0x0000000000000000        0x0 lib/orangescrt.a(exec.o)
 .llvm_addrsig  0x0000000000000000        0x5 lib/orangescrt.a(exec.o)

内存配置

名称           来源             长度             属性
*default*        0x0000000000000000 0xffffffffffffffff

链结器命令稿和内存映射

节 .text 的地址设置到 0x1000
LOAD kernel/kernel.o
LOAD kernel/start.o
LOAD kernel/main.o
LOAD kernel/clock.o
LOAD kernel/keyboard.o
LOAD kernel/tty.o
LOAD kernel/console.o
LOAD kernel/i8259.o
LOAD kernel/global.o
LOAD kernel/protect.o
LOAD kernel/proc.o
LOAD kernel/systask.o
LOAD kernel/hd.o
LOAD kernel/kliba.o
LOAD kernel/klib.o
LOAD kernel/mfqs_queue.o
LOAD lib/syslog.o
LOAD mm/main.o
LOAD mm/forkexit.o
LOAD mm/exec.o
LOAD fs/main.o
LOAD fs/open.o
LOAD fs/misc.o
LOAD fs/read_write.o
LOAD fs/link.o
LOAD fs/disklog.o
LOAD lib/orangescrt.a
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
                0x00000000080480d4                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x00000000080480d4        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 .rel.got       0x00000000080480d4        0x0 kernel/kernel.o
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x00000000080480d4        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(.rel.iplt)
 .rel.iplt      0x00000000080480d4        0x0 kernel/kernel.o
                [!provide]                        PROVIDE (__rel_iplt_end = .)
                0x0000000008049000                . = ALIGN (CONSTANT (MAXPAGESIZE))

.init
 *(SORT_NONE(.init))

.plt            0x0000000008049000        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000008049000        0x0 kernel/kernel.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text           0x0000000000001000     0xf808
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(SORT_BY_NAME(.text.sorted.*))
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000001000      0x410 kernel/kernel.o
                0x0000000000001000                _start
                0x0000000000001040                hwint00
                0x0000000000001070                hwint01
                0x00000000000010a0                hwint02
                0x00000000000010d0                hwint03
                0x0000000000001100                hwint04
                0x0000000000001130                hwint05
                0x0000000000001160                hwint06
                0x0000000000001190                hwint07
                0x00000000000011c0                hwint08
                0x00000000000011f0                hwint09
                0x0000000000001220                hwint10
                0x0000000000001250                hwint11
                0x0000000000001280                hwint12
                0x00000000000012b0                hwint13
                0x00000000000012e0                hwint14
                0x0000000000001310                hwint15
                0x0000000000001334                divide_error
                0x000000000000133a                single_step_exception
                0x0000000000001340                nmi
                0x0000000000001346                breakpoint_exception
                0x000000000000134c                overflow
                0x0000000000001352                bounds_check
                0x0000000000001358                inval_opcode
                0x000000000000135e                copr_not_available
                0x0000000000001364                double_fault
                0x0000000000001368                copr_seg_overrun
                0x000000000000136e                inval_tss
                0x0000000000001372                segment_not_present
                0x0000000000001376                stack_exception
                0x000000000000137a                general_protection
                0x000000000000137e                page_fault
                0x0000000000001382                copr_error
                0x00000000000013cb                sys_call
                0x00000000000013eb                restart
 .text          0x0000000000001410       0xa1 kernel/start.o
                0x0000000000001410                cstart
 *fill*         0x00000000000014b1        0xf 
 .text          0x00000000000014c0      0xc4b kernel/main.o
                0x00000000000014c0                kernel_main
                0x0000000000001890                get_ticks
                0x00000000000018d0                untar
                0x0000000000001ba0                shabby_shell
                0x0000000000001eb0                Init
                0x0000000000002070                TestA
                0x0000000000002080                TestB
                0x0000000000002090                TestC
                0x00000000000020a0                panic
 *fill*         0x000000000000210b        0x5 
 .text          0x0000000000002110      0x143 kernel/clock.o
                0x0000000000002110                clock_handler
                0x00000000000021a0                milli_delay
                0x00000000000021e0                init_clock
 *fill*         0x0000000000002253        0xd 
 .text          0x0000000000002260      0x899 kernel/keyboard.o
                0x0000000000002260                keyboard_handler
                0x00000000000022f0                init_keyboard
                0x00000000000023b0                keyboard_read
 *fill*         0x0000000000002af9        0x7 
 .text          0x0000000000002b00      0xc4d kernel/tty.o
                0x0000000000002b00                task_tty
                0x0000000000003200                in_process
                0x00000000000033e0                sys_printx
                0x00000000000035c0                dump_tty_buf
 *fill*         0x000000000000374d        0x3 
 .text          0x0000000000003750      0x92d kernel/console.o
                0x0000000000003750                init_screen
                0x00000000000038e0                out_char
                0x0000000000003cf0                scroll_screen
                0x0000000000003f70                is_current_console
                0x0000000000003fb0                select_console
 *fill*         0x000000000000407d        0x3 
 .text          0x0000000000004080      0x17f kernel/i8259.o
                0x0000000000004080                init_8259A
                0x0000000000004190                spurious_irq
                0x00000000000041d0                put_irq_handler
 *fill*         0x00000000000041ff        0x1 
 .text          0x0000000000004200        0x0 kernel/global.o
 .text          0x0000000000004200      0x9f0 kernel/protect.o
                0x0000000000004200                init_prot
                0x0000000000004980                init_desc
                0x0000000000004a20                seg2linear
                0x0000000000004a70                exception_handler
 .text          0x0000000000004bf0     0x1f29 kernel/proc.o
                0x0000000000004bf0                schedule
                0x0000000000004ce0                schedule_mfqs
                0x0000000000004e80                sys_sendrec
                0x0000000000005050                va2la
                0x0000000000006130                ldt_seg_linear
                0x0000000000006180                reset_msg
                0x00000000000061c0                inform_int
                0x00000000000063d0                dump_proc
                0x0000000000006820                dump_msg
 *fill*         0x0000000000006b19        0x7 
 .text          0x0000000000006b20      0x2d4 kernel/systask.o
                0x0000000000006b20                task_sys
 *fill*         0x0000000000006df4        0xc 
 .text          0x0000000000006e00     0x10a1 kernel/hd.o
                0x0000000000006e00                task_hd
                0x0000000000007490                hd_handler
 *fill*         0x0000000000007ea1        0xf 
 .text          0x0000000000007eb0      0x19a kernel/kliba.o
                0x0000000000007eb0                disp_str
                0x0000000000007eee                disp_color_str
                0x0000000000007f2d                out_byte
                0x0000000000007f39                in_byte
                0x0000000000007f43                port_read
                0x0000000000007f56                port_write
                0x0000000000007f69                disable_irq
                0x0000000000007f9e                enable_irq
                0x0000000000007fbd                disable_int
                0x0000000000007fbf                enable_int
                0x0000000000007fc1                glitter
 *fill*         0x000000000000804a        0x6 
 .text          0x0000000000008050      0x3cf kernel/klib.o
                0x0000000000008050                get_boot_params
                0x0000000000008110                get_kernel_map
                0x0000000000008270                itoa
                0x0000000000008360                disp_int
                0x00000000000083a0                delay
 *fill*         0x000000000000841f        0x1 
 .text          0x0000000000008420      0x154 kernel/mfqs_queue.o
                0x0000000000008420                enqueue
                0x00000000000084f0                dequeue
 *fill*         0x0000000000008574        0xc 
 .text          0x0000000000008580       0x99 lib/syslog.o
                0x0000000000008580                syslog
 *fill*         0x0000000000008619        0x7 
 .text          0x0000000000008620      0x22d mm/main.o
                0x0000000000008620                task_mm
                0x0000000000008740                alloc_mem
                0x00000000000087f0                free_mem
 *fill*         0x000000000000884d        0x3 
 .text          0x0000000000008850      0x6e3 mm/forkexit.o
                0x0000000000008850                do_fork
                0x0000000000008c40                do_exit
                0x0000000000008e50                do_wait
 *fill*         0x0000000000008f33        0xd 
 .text          0x0000000000008f40      0x482 mm/exec.o
                0x0000000000008f40                do_exec
 *fill*         0x00000000000093c2        0xe 
 .text          0x00000000000093d0     0x1567 fs/main.o
                0x00000000000093d0                task_fs
                0x0000000000009650                rw_sector
                0x0000000000009720                get_super_block
                0x00000000000097a0                get_inode
                0x0000000000009960                put_inode
                0x00000000000099b0                sync_inode
 *fill*         0x000000000000a937        0x9 
 .text          0x000000000000a940      0xe34 fs/open.o
                0x000000000000a940                do_open
                0x000000000000af60                do_close
                0x000000000000afe0                do_lseek
 *fill*         0x000000000000b774        0xc 
 .text          0x000000000000b780      0x56b fs/misc.o
                0x000000000000b780                do_stat
                0x000000000000ba10                search_file
                0x000000000000bc20                strip_path
 *fill*         0x000000000000bceb        0x5 
 .text          0x000000000000bcf0      0x602 fs/read_write.o
                0x000000000000bcf0                do_rdwt
 *fill*         0x000000000000c2f2        0xe 
 .text          0x000000000000c300      0xb88 fs/link.o
                0x000000000000c300                do_unlink
 *fill*         0x000000000000ce88        0x8 
 .text          0x000000000000ce90     0x2881 fs/disklog.o
                0x000000000000ce90                disklog
                0x000000000000d6f0                dump_fd_graph
 *fill*         0x000000000000f711        0xf 
 .text          0x000000000000f720      0x116 lib/orangescrt.a(printf.o)
                0x000000000000f720                printf
                0x000000000000f7d0                printl
 *fill*         0x000000000000f836        0xa 
 .text          0x000000000000f840      0x47b lib/orangescrt.a(vsprintf.o)
                0x000000000000f840                vsprintf
                0x000000000000fc80                sprintf
 *fill*         0x000000000000fcbb        0x5 
 .text          0x000000000000fcc0       0x78 lib/orangescrt.a(string.o)
                0x000000000000fcc0                memcpy
                0x000000000000fce9                memset
                0x000000000000fd0a                strcpy
                0x000000000000fd22                strlen
 *fill*         0x000000000000fd38        0x8 
 .text          0x000000000000fd40      0x3e6 lib/orangescrt.a(misc.o)
                0x000000000000fd40                send_recv
                0x000000000000fe70                assertion_failure
                0x000000000000fef0                memcmp
                0x000000000000ffa0                strcmp
                0x0000000000010060                strcat
                0x0000000000010100                spin
 *fill*         0x0000000000010126        0xa 
 .text          0x0000000000010130       0x89 lib/orangescrt.a(open.o)
                0x0000000000010130                open
 *fill*         0x00000000000101b9        0x7 
 .text          0x00000000000101c0       0x5b lib/orangescrt.a(read.o)
                0x00000000000101c0                read
 *fill*         0x000000000001021b        0x5 
 .text          0x0000000000010220       0x5b lib/orangescrt.a(write.o)
                0x0000000000010220                write
 *fill*         0x000000000001027b        0x5 
 .text          0x0000000000010280       0x41 lib/orangescrt.a(close.o)
                0x0000000000010280                close
 *fill*         0x00000000000102c1        0xf 
 .text          0x00000000000102d0       0x63 lib/orangescrt.a(getpid.o)
                0x00000000000102d0                getpid
 *fill*         0x0000000000010333        0xd 
 .text          0x0000000000010340       0x89 lib/orangescrt.a(stat.o)
                0x0000000000010340                stat
 *fill*         0x00000000000103c9        0x7 
 .text          0x00000000000103d0       0x96 lib/orangescrt.a(fork.o)
                0x00000000000103d0                fork
 *fill*         0x0000000000010466        0xa 
 .text          0x0000000000010470       0x5b lib/orangescrt.a(wait.o)
                0x0000000000010470                wait
 *fill*         0x00000000000104cb        0x5 
 .text          0x00000000000104d0      0x30f lib/orangescrt.a(exec.o)
                0x00000000000104d0                exec
                0x0000000000010560                execl
                0x00000000000105a0                execv
 *fill*         0x00000000000107df        0x1 
 .text          0x00000000000107e0       0x28 lib/orangescrt.a(syscall.o)
                0x00000000000107e0                sendrec
                0x00000000000107fa                printx
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)
                0x0000000000011000                . = ALIGN (CONSTANT (MAXPAGESIZE))
                0x0000000000011000                . = SEGMENT_START ("rodata-segment", (ALIGN (CONSTANT (MAXPAGESIZE)) + (. & (CONSTANT (MAXPAGESIZE) - 0x1))))

.rodata         0x0000000000011000     0x2429
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata.str1.1
                0x0000000000011000       0x47 kernel/start.o
 .rodata.str1.1
                0x0000000000011047      0x18b kernel/main.o
                                        0x194 (松开之前的大小)
 *fill*         0x00000000000111d2        0x2 
 .rodata        0x00000000000111d4        0x8 kernel/main.o
 .rodata        0x00000000000111dc       0x6a kernel/keyboard.o
 *fill*         0x0000000000011246        0x2 
 .rodata        0x0000000000011248       0x90 kernel/tty.o
 .rodata.str1.1
                0x00000000000112d8       0xf7 kernel/tty.o
                                        0x102 (松开之前的大小)
 .rodata.str1.1
                0x00000000000113cf       0x62 kernel/console.o
 .rodata.str1.1
                0x0000000000011431        0xf kernel/i8259.o
                                         0x11 (松开之前的大小)
 .rodata        0x0000000000011440       0x10 kernel/global.o
                0x0000000000011440                FSBUF_SIZE
                0x0000000000011444                MMBUF_SIZE
                0x0000000000011448                LOGBUF_SIZE
                0x000000000001144c                LOGDISKBUF_SIZE
 .rodata.str1.1
                0x0000000000011450       0x60 kernel/protect.o
                                         0x62 (松开之前的大小)
 .rodata        0x00000000000114b0      0x500 kernel/protect.o
 .rodata.str1.1
                0x00000000000119b0      0x5cb kernel/proc.o
                                        0x5de (松开之前的大小)
 .rodata.str1.1
                0x0000000000011f7b       0x11 kernel/systask.o
 .rodata        0x0000000000011f8c       0x2c kernel/hd.o
 .rodata.str1.1
                0x0000000000011fb8      0x1b5 kernel/hd.o
                                        0x1bf (松开之前的大小)
 .rodata.str1.1
                0x000000000001216d       0x67 kernel/klib.o
 .rodata.str1.1
                0x00000000000121d4       0x1e lib/syslog.o
 *fill*         0x00000000000121f2        0x2 
 .rodata        0x00000000000121f4       0x10 mm/main.o
 .rodata.str1.1
                0x0000000000012204       0xab mm/main.o
                                         0xad (松开之前的大小)
 .rodata.str1.1
                0x00000000000122af       0xe3 mm/forkexit.o
 .rodata.str1.1
                0x0000000000012392       0xa2 mm/exec.o
 .rodata        0x0000000000012434       0x34 fs/main.o
 .rodata.str1.1
                0x0000000000012468      0x23d fs/main.o
                                        0x249 (松开之前的大小)
 .rodata.str1.1
                0x00000000000126a5       0xf5 fs/open.o
                                        0x138 (松开之前的大小)
 .rodata.str1.1
                0x000000000001279a       0x48 fs/misc.o
                                         0x5e (松开之前的大小)
 .rodata.str1.1
                0x00000000000127e2      0x11d fs/read_write.o
                                        0x15c (松开之前的大小)
 .rodata.str1.1
                0x00000000000128ff      0x193 fs/link.o
                                        0x1a7 (松开之前的大小)
 .rodata.str1.1
                0x0000000000012a92      0x7be fs/disklog.o
                                        0x7f3 (松开之前的大小)
 .rodata.str1.1
                0x0000000000013250       0x14 lib/orangescrt.a(printf.o)
 .rodata        0x0000000000013264       0x58 lib/orangescrt.a(vsprintf.o)
 .rodata.str1.1
                0x00000000000132bc       0xab lib/orangescrt.a(misc.o)
 .rodata.str1.1
                0x0000000000013367       0x23 lib/orangescrt.a(open.o)
 .rodata.str1.1
                0x000000000001338a        0xd lib/orangescrt.a(getpid.o)
                                         0x25 (松开之前的大小)
 .rodata.str1.1
                0x0000000000013397        0xb lib/orangescrt.a(stat.o)
                                         0x23 (松开之前的大小)
 .rodata.str1.1
                0x00000000000133a2       0x1b lib/orangescrt.a(fork.o)
                                         0x33 (松开之前的大小)
 .rodata.str1.1
                0x00000000000133bd       0x6c lib/orangescrt.a(exec.o)
                                         0x84 (松开之前的大小)

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges*)
                0x0000000000014429                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges*)

.tdata          0x0000000000014429        0x0
                [!provide]                        PROVIDE (__tdata_start = .)
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x0000000000014429        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0x0000000000014429        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0x0000000000014429        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x000000000001442c        0x0
 *(.got)
 .got           0x000000000001442c        0x0 kernel/kernel.o
 *(.igot)
                0x000000000001442c                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x000000000001442c        0x0
 *(.got.plt)
 .got.plt       0x000000000001442c        0x0 kernel/kernel.o
 *(.igot.plt)
 .igot.plt      0x000000000001442c        0x0 kernel/kernel.o

.data           0x000000000001442c      0x7c4
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x000000000001442c        0x2 kernel/kernel.o
 *fill*         0x000000000001442e        0x2 
 .data          0x0000000000014430      0x600 kernel/keyboard.o
                0x0000000000014430                keymap
 .data          0x0000000000014a30       0x22 kernel/tty.o
 *fill*         0x0000000000014a52        0x2 
 .data          0x0000000000014a54      0x19c kernel/global.o
                0x0000000000014a54                task_table
                0x0000000000014b1c                user_proc_table
                0x0000000000014bbc                sys_call_table
                0x0000000000014bc8                dd_map
                0x0000000000014be0                fsbuf
                0x0000000000014be4                mmbuf
                0x0000000000014be8                logbuf
                0x0000000000014bec                logdiskbuf

.data1
 *(.data1)
                0x0000000000014bf0                _edata = .
                [!provide]                        PROVIDE (edata = .)
                0x0000000000014bf0                . = .
                0x0000000000014bf0                __bss_start = .

.bss            0x0000000000014bf0    0x2b9ec
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x0000000000014bf0      0x800 kernel/kernel.o
 .bss           0x00000000000153f0       0x58 kernel/keyboard.o
 .bss           0x0000000000015448    0x2a95c kernel/global.o
                0x0000000000015448                mfqs_queue
                0x00000000000156c4                ticks
                0x00000000000156c8                disp_pos
                0x00000000000156cc                gdt_ptr
                0x00000000000156d2                gdt
                0x0000000000015ad2                idt_ptr
                0x0000000000015ad8                idt
                0x00000000000162d8                k_reenter
                0x00000000000162dc                current_console
                0x00000000000162e0                key_pressed
                0x00000000000162e4                tss
                0x000000000001634c                p_proc_ready
                0x0000000000016350                mm_msg
                0x0000000000016380                memory_size
                0x0000000000016384                f_desc_table
                0x0000000000016784                inode_table
                0x0000000000017284                super_block
                0x0000000000017464                fs_msg
                0x0000000000017494                pcaller
                0x0000000000017498                root_inode
                0x000000000001749c                proc_table
                0x000000000001b0bc                task_stack
                0x000000000003f0bc                tty_table
                0x000000000003fd28                console_table
                0x000000000003fd64                irq_table
 .bss           0x000000000003fda4      0x630 kernel/hd.o
 .bss           0x00000000000403d4      0x208 fs/disklog.o
 *(COMMON)
                0x00000000000405dc                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x00000000000405dc                . = ALIGN (0x4)
                0x00000000000405dc                . = SEGMENT_START ("ldata-segment", .)
                0x00000000000405dc                . = ALIGN (0x4)
                0x00000000000405dc                _end = .
                [!provide]                        PROVIDE (end = .)
                0x00000000000405dc                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x1e
 *(.comment)
 .comment       0x0000000000000000       0x1e kernel/start.o
                                         0x1f (松开之前的大小)
 .comment       0x000000000000001e       0x1f kernel/main.o
 .comment       0x000000000000001e       0x1f kernel/clock.o
 .comment       0x000000000000001e       0x1f kernel/keyboard.o
 .comment       0x000000000000001e       0x1f kernel/tty.o
 .comment       0x000000000000001e       0x1f kernel/console.o
 .comment       0x000000000000001e       0x1f kernel/i8259.o
 .comment       0x000000000000001e       0x1f kernel/global.o
 .comment       0x000000000000001e       0x1f kernel/protect.o
 .comment       0x000000000000001e       0x1f kernel/proc.o
 .comment       0x000000000000001e       0x1f kernel/systask.o
 .comment       0x000000000000001e       0x1f kernel/hd.o
 .comment       0x000000000000001e       0x1f kernel/klib.o
 .comment       0x000000000000001e       0x1f kernel/mfqs_queue.o
 .comment       0x000000000000001e       0x1f lib/syslog.o
 .comment       0x000000000000001e       0x1f mm/main.o
 .comment       0x000000000000001e       0x1f mm/forkexit.o
 .comment       0x000000000000001e       0x1f mm/exec.o
 .comment       0x000000000000001e       0x1f fs/main.o
 .comment       0x000000000000001e       0x1f fs/open.o
 .comment       0x000000000000001e       0x1f fs/misc.o
 .comment       0x000000000000001e       0x1f fs/read_write.o
 .comment       0x000000000000001e       0x1f fs/link.o
 .comment       0x000000000000001e       0x1f fs/disklog.o
 .comment       0x000000000000001e       0x1f lib/orangescrt.a(printf.o)
 .comment       0x000000000000001e       0x1f lib/orangescrt.a(vsprintf.o)
 .comment       0x000000000000001e       0x1f lib/orangescrt.a(misc.o)
 .comment       0x000000000000001e       0x1f lib/orangescrt.a(open.o)
 .comment       0x000000000000001e       0x1f lib/orangescrt.a(read.o)
 .comment       0x000000000000001e       0x1f lib/orangescrt.a(write.o)
 .comment       0x000000000000001e       0x1f lib/orangescrt.a(close.o)
 .comment       0x000000000000001e       0x1f lib/orangescrt.a(getpid.o)
 .comment       0x000000000000001e       0x1f lib/orangescrt.a(stat.o)
 .comment       0x000000000000001e       0x1f lib/orangescrt.a(fork.o)
 .comment       0x000000000000001e       0x1f lib/orangescrt.a(wait.o)
 .comment       0x000000000000001e       0x1f lib/orangescrt.a(exec.o)

.gnu.build.attributes
 *(.gnu.build.attributes .gnu.build.attributes.*)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(kernel.bin elf32-i386)
